/*
Deployment script for InvIn.DB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "InvIn.DB"
:setvar DefaultFilePrefix "InvIn.DB"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL14.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL14.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [InvIn]...';


GO
CREATE SCHEMA [InvIn]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [InvIn].[AdminItem]...';


GO
CREATE TABLE [InvIn].[AdminItem] (
    [Id]       INT            IDENTITY (1, 1) NOT NULL,
    [Name]     NVARCHAR (50)  NOT NULL,
    [URL]      NVARCHAR (MAX) NOT NULL,
    [Language] VARCHAR (10)   NOT NULL,
    CONSTRAINT [PK_AdminItem] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [InvIn].[MainMenu]...';


GO
CREATE TABLE [InvIn].[MainMenu] (
    [Id]       INT            IDENTITY (1, 1) NOT NULL,
    [Name]     NVARCHAR (250) NOT NULL,
    [OrderBy]  INT            NOT NULL,
    [URL]      NVARCHAR (250) NOT NULL,
    [Text]     NVARCHAR (250) NULL,
    [Icon]     NVARCHAR (50)  NULL,
    [ToolTip]  NVARCHAR (250) NULL,
    [Language] VARCHAR (10)   NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [InvIn].[User]...';


GO
CREATE TABLE [InvIn].[User] (
    [Id]           INT            IDENTITY (1, 1) NOT NULL,
    [Email]        NVARCHAR (50)  NOT NULL,
    [Password]     NVARCHAR (100) NOT NULL,
    [Name]         NVARCHAR (100) NOT NULL,
    [RolId]        INT            NOT NULL,
    [CreatedBy]    INT            NOT NULL,
    [CreatedDate]  DATE           NOT NULL,
    [ModifiedBy]   INT            NOT NULL,
    [ModifiedDate] DATE           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [InvIn].[Rol]...';


GO
CREATE TABLE [InvIn].[Rol] (
    [Id]   INT          IDENTITY (1, 1) NOT NULL,
    [Name] VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [InvIn].[Image]...';


GO
CREATE TABLE [InvIn].[Image] (
    [Id]          INT            IDENTITY (1, 1) NOT NULL,
    [Name]        NVARCHAR (250) NOT NULL,
    [URL]         NVARCHAR (250) NOT NULL,
    [Description] TEXT           NULL,
    [Language]    VARCHAR (10)   NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [InvIn].[Biography]...';


GO
CREATE TABLE [InvIn].[Biography] (
    [Id]       INT           IDENTITY (1, 1) NOT NULL,
    [Title]    VARCHAR (250) NULL,
    [Body]     TEXT          NULL,
    [ImageId]  INT           NULL,
    [Language] VARCHAR (10)  NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [InvIn].[ContactInfo]...';


GO
CREATE TABLE [InvIn].[ContactInfo] (
    [Id]                 INT           IDENTITY (1, 1) NOT NULL,
    [CompanyName]        VARCHAR (250) NOT NULL,
    [CompanyDescription] VARCHAR (MAX) NULL,
    [CompanyEmail]       VARCHAR (150) NULL,
    [CompanyPhone]       VARCHAR (50)  NULL,
    [ImageId]            INT           NULL,
    [Language]           VARCHAR (10)  NOT NULL,
    CONSTRAINT [PK_ContactInfo] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [InvIn].[HomeCarouselImage]...';


GO
CREATE TABLE [InvIn].[HomeCarouselImage] (
    [Id]       INT            IDENTITY (1, 1) NOT NULL,
    [ImageId]  INT            NOT NULL,
    [Order]    INT            NULL,
    [URLLink]  NVARCHAR (250) NULL,
    [Language] VARCHAR (10)   NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [InvIn].[HomeConfiguration]...';


GO
CREATE TABLE [InvIn].[HomeConfiguration] (
    [Id]                      INT           IDENTITY (1, 1) NOT NULL,
    [CardAnnouncementImageId] INT           NULL,
    [CardVideoImageId]        INT           NULL,
    [Text]                    VARCHAR (MAX) NULL,
    [Language]                VARCHAR (10)  NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [InvIn].[ImageList]...';


GO
CREATE TABLE [InvIn].[ImageList] (
    [Id]       INT          IDENTITY (1, 1) NOT NULL,
    [ImageId]  INT          NOT NULL,
    [Language] VARCHAR (10) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [InvIn].[MenuItem]...';


GO
CREATE TABLE [InvIn].[MenuItem] (
    [Id]         INT            IDENTITY (1, 1) NOT NULL,
    [MainMenuId] INT            NOT NULL,
    [Name]       NVARCHAR (250) NOT NULL,
    [OrderBy]    INT            NOT NULL,
    [Action]     NVARCHAR (250) NOT NULL,
    [Text]       NVARCHAR (250) NULL,
    [Icon]       NVARCHAR (50)  NULL,
    [ToolTip]    NVARCHAR (250) NULL,
    [Language]   VARCHAR (10)   NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [InvIn].[Document]...';


GO
CREATE TABLE [InvIn].[Document] (
    [Id]          INT           IDENTITY (1, 1) NOT NULL,
    [Title]       VARCHAR (150) NOT NULL,
    [Body]        VARCHAR (MAX) NULL,
    [ImageId]     INT           NULL,
    [DateCreated] DATETIME      NOT NULL,
    [Enabled]     BIT           NOT NULL,
    [Description] VARCHAR (250) NOT NULL,
    [Language]    VARCHAR (10)  NOT NULL,
    CONSTRAINT [PK_PageNews] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating unnamed constraint on [InvIn].[MainMenu]...';


GO
ALTER TABLE [InvIn].[MainMenu]
    ADD DEFAULT 'en-US' FOR [Language];


GO
PRINT N'Creating unnamed constraint on [InvIn].[User]...';


GO
ALTER TABLE [InvIn].[User]
    ADD DEFAULT 1 FOR [RolId];


GO
PRINT N'Creating unnamed constraint on [InvIn].[Image]...';


GO
ALTER TABLE [InvIn].[Image]
    ADD DEFAULT 'en-US' FOR [Language];


GO
PRINT N'Creating unnamed constraint on [InvIn].[Biography]...';


GO
ALTER TABLE [InvIn].[Biography]
    ADD DEFAULT 'en-US' FOR [Language];


GO
PRINT N'Creating unnamed constraint on [InvIn].[HomeCarouselImage]...';


GO
ALTER TABLE [InvIn].[HomeCarouselImage]
    ADD DEFAULT 'en-US' FOR [Language];


GO
PRINT N'Creating unnamed constraint on [InvIn].[HomeConfiguration]...';


GO
ALTER TABLE [InvIn].[HomeConfiguration]
    ADD DEFAULT 'en-US' FOR [Language];


GO
PRINT N'Creating unnamed constraint on [InvIn].[ImageList]...';


GO
ALTER TABLE [InvIn].[ImageList]
    ADD DEFAULT 1 FOR [ImageId];


GO
PRINT N'Creating unnamed constraint on [InvIn].[ImageList]...';


GO
ALTER TABLE [InvIn].[ImageList]
    ADD DEFAULT 'en-US' FOR [Language];


GO
PRINT N'Creating unnamed constraint on [InvIn].[MenuItem]...';


GO
ALTER TABLE [InvIn].[MenuItem]
    ADD DEFAULT 'en-US' FOR [Language];


GO
PRINT N'Creating [InvIn].[FK_Biography_ToImage]...';


GO
ALTER TABLE [InvIn].[Biography]
    ADD CONSTRAINT [FK_Biography_ToImage] FOREIGN KEY ([ImageId]) REFERENCES [InvIn].[Image] ([Id]);


GO
PRINT N'Creating [InvIn].[FK_ContactInfo_ToImage]...';


GO
ALTER TABLE [InvIn].[ContactInfo]
    ADD CONSTRAINT [FK_ContactInfo_ToImage] FOREIGN KEY ([ImageId]) REFERENCES [InvIn].[Image] ([Id]);


GO
PRINT N'Creating [InvIn].[FK_HomeCarouselImage_ToImage]...';


GO
ALTER TABLE [InvIn].[HomeCarouselImage]
    ADD CONSTRAINT [FK_HomeCarouselImage_ToImage] FOREIGN KEY ([ImageId]) REFERENCES [InvIn].[Image] ([Id]);


GO
PRINT N'Creating [InvIn].[FK_HomeConfigurationCard_ToImage]...';


GO
ALTER TABLE [InvIn].[HomeConfiguration]
    ADD CONSTRAINT [FK_HomeConfigurationCard_ToImage] FOREIGN KEY ([CardAnnouncementImageId]) REFERENCES [InvIn].[Image] ([Id]);


GO
PRINT N'Creating [InvIn].[FK_HomeConfigurationVideo_ToImage]...';


GO
ALTER TABLE [InvIn].[HomeConfiguration]
    ADD CONSTRAINT [FK_HomeConfigurationVideo_ToImage] FOREIGN KEY ([CardVideoImageId]) REFERENCES [InvIn].[Image] ([Id]);


GO
PRINT N'Creating [InvIn].[FK_ImageList_ToImage]...';


GO
ALTER TABLE [InvIn].[ImageList]
    ADD CONSTRAINT [FK_ImageList_ToImage] FOREIGN KEY ([ImageId]) REFERENCES [InvIn].[Image] ([Id]);


GO
PRINT N'Creating [InvIn].[FK_MenuItem_ToMainMenu]...';


GO
ALTER TABLE [InvIn].[MenuItem]
    ADD CONSTRAINT [FK_MenuItem_ToMainMenu] FOREIGN KEY ([MainMenuId]) REFERENCES [InvIn].[MainMenu] ([Id]);


GO
PRINT N'Creating [InvIn].[FK_PageNews_ToImage]...';


GO
ALTER TABLE [InvIn].[Document]
    ADD CONSTRAINT [FK_PageNews_ToImage] FOREIGN KEY ([ImageId]) REFERENCES [InvIn].[Image] ([Id]);


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
